body {
	background: lightblue;
}



/*   --      EXample for Grid */

.container {
	background-color: lightblue;
	margin: 30px auto;
  color: #fff;
  font-size:30px;
  /* //height: 100hv; */
  /* //width: auto; */
	
	display: grid;
	grid-template-rows: repeat(2, 150px);
	/* grid-template-columns: repeat(2,150px) 1fr; */
	/* grid-template-columns: 50% 1fr 2fr; */
	grid-template-columns: 1fr 1fr 1fr;
	
	grid-gap: 20px;
  }
.item {
  padding: 10px 20px;

}
  .item--1 {
	background-color:orangered;
	/*grid-row-start: 2;
  grid-row-end:3;
  grid-column-start: 2;
  grid-column-end:3;*/
  grid-row: 2/3;
  grid-column: 2/3;
    z-index: 10;
  }
  .item--2 {
	background-color:green;
  /* //grid-column: 2/ span 2; // now if you use -grid-column: 2 / span 3-
                               // it will overflow and make another column */
    grid-column: 1 / -1; /* // using grid-column: 1-2-3 / -1 makes it go all the way to the ened of that column and doesnt over flow.. better than using span */
  
}
  .item--3 {
	background-color:violet;
  grid-column: 1/3;
    grid-row: 2/3;
  }
  .item--4 {
	background-color:pink;
  }
  .item--5 {
	background-color:blue;
 /* grid-row: 1/2;
  grid-column: 3/4;*/
  grid-area: 1 /3 / 3 / 4; /*//easiest way first to places the row 
              //second two sets places the column....*/
  }
  .item--6 {
	background-color: brown;
  grid-row: 1 / 2;
    grid-column: 2 / 3;
  }
  
